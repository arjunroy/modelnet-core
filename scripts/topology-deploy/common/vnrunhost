#!/usr/bin/perl
#
# modelnet  vnrunhost
#
#     runs on the node hosting the VN and sets up ENV for command
#
#
# Copyright (c) 2003 Duke University  All rights reserved.
# See COPYING for license statement.
#

use English;
use XML::Simple;
use IO::File;

($bindir,$prog) = $0 =~ m,(.*)/(.*),;
$bindir = "/usr/local/bin" unless ( -d $bindir and $bindir ne '.');

my $libip = "$bindir/../lib/libipaddr.so";
die "$prog: $libip $!\n" unless -r $libip;

if ($#ARGV < 2) {
	print "usage: $prog [-h hostsfile] < VN# | all > <file.model> <command>\n";
	exit 1;
	}


$vnnum = shift;
$modelfile = shift;
if ($ARGV[0] eq '-h') {
	shift;
	$hostsfile = shift;
	die "$prog: $hostsfile: $!\n" unless -r $hostsfile;
	}
die "$prog: $modelfile: $!\n" unless -r $modelfile;

@job = @ARGV;

my ($osname,$hostname) = split ' ',qx/uname -sn/;

# the $hostname may be a full hostname in which case
# we simply and get the first part

@hostnamefields = split '\.', $hostname;
$hostname = $hostnamefields[0];

# my $modelxml = &XMLin($modelfile,forcearray => ["host","emul","subnet","virtnode"], keeproot=>1);

$xml = new IO::File $modelfile;
while(<$xml>) {last if /host.*hostname=.$hostname/;}

while(<$xml>) {
	last if /host.*hostname=/;
	($vn) = /int_vn="(\d+)"/;
	($vip) = /vip="(\d+.\d+.\d+.\d+)"/;
	next unless $vip;
	next if (($vn ne $vnnum) and ($vnnum ne 'all'));
	if (fork()) {
	    $ENV{VN} = $vn;
	    $ENV{LD_PRELOAD} = $libip;
	    $ENV{SRCIP} = $vip;
	    $ENV{HOSTS} = $hostsfile if $hostsfile;
	    exec(@job);
	    die "Cannot execute $job[0]";
	    }

	}

exit;
