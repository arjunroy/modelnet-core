#!/usr/bin/perl
# This script test the capacity of modelnet
# It basically runs the same experiment in the modelnet paper
# The first param is the number of hops in each flow

use Parallel::Jobs;
use XML::DOM;

`rm -f data.txt`;

$numhops=$ARGV[1];
$numflows=$ARGV[0];

#system("ssh xzong\@sysnet28 'netstat -sw | grep forwarded >> /home/xzong/mnproject/mncapacity/r1.dat'");

#while ($numhops <= 12)
#{	
	system("./creategraph.pl ".$numflows." ".$numhops); 
	system("/usr/local/bin/allpairs capacity.graph > capacity.route");  	
	`mkmodel capacity.graph capacity.hosts > capacity.model`;
	#`./adjustcapacity.pl $numflows $numhops`;
	#`xmlformat.pl capacity.model > capacity1.model`;

	my $parser=new XML::DOM::Parser;
	my $doc=$parser->parsefile("capacity.model");

	my $hosts=$doc->getElementsByTagName("host");
	my $sysnet27=$hosts->item(0);
	my $sysnet26=$hosts->item(1);
	my $vn27 = $sysnet27->getElementsByTagName("virtnode");
	my $vn26 = $sysnet26->getElementsByTagName("virtnode");

	my $port=30000;
	print "++++++++++++++++++++++++++++++++++++++++++++++++++++\n";
	print "Deploy Network Topology !!!!!\n";
	print "====================================================\n";

    `gexec deployhost /home/xzong/mnproject/mncapacity/capacity.model /home/xzong/mnproject/mncapacity/capacity.route`; 	#redeploy modelnet on sysnet27
	sleep 5;
	for ($i=0; $i<$numflows; $i++)  {
	    my $tmp=$i*($numhops+1)+$numhops;
		$pid=Parallel::Jobs::start_job("gexec vnrunhost $tmp /home/xzong/mnproject/mncapacity/capacity.model netserver -p $port");
		$port++;
	}

	sleep 10;
	`gexec pkill gexec`;
	print "++++++++++++++++++++++++++++++++++++++++++++++++++++\n";
	print "Server Setup Finished !!!!!\n";
	print "====================================================\n";
	my $port=30000;
	$pid=Parallel::Jobs::start_job("sar 3");
	for ($i=0; $i<$numflows; $i++)  {
	    my $tmp=$i*($numhops+1)+$numhops;
		for ($j=0; $j<$vn27->getLength;$j++) {
			if ($vn27->item($j)->getAttribute("int_vn") ==  $tmp) {
				$addr=$vn27->item($j)->getAttribute("vip");
			}
		}
		for ($j=0; $j<$vn26->getLength;$j++) {
			if ($vn26->item($j)->getAttribute("int_vn") ==  $tmp) {
				$addr=$vn26->item($j)->getAttribute("vip");
			}
		}
		$tmp=$tmp-$numhops;
		print $tmp."       ".$addr."\n";
		$pid=Parallel::Jobs::start_job("gexec vnrunhost $tmp /home/xzong/mnproject/mncapacity/capacity.model netperf -t UDP_STREAM -H $addr -p $port -l 3 -b 10 -- -m 1470");
		$port++;
	}
	sleep 30;

	print "++++++++++++++++++++++++++++++++++++++++++++++++++++\n";
	print "Finsh Sending!!!!!\n";
	print "====================================================\n";
	#`echo "===========================================" >> data.txt`;
	$numhops=$numhops*2;
	`gexec pkill netserver`;
	`gexec pkill netperf`;
	`gexec pkill gexec`;
#	system("ssh xzong\@sysnet28 'netstat -sw | grep forwarded >> /home/xzong/mnproject/mncapacity/r1.dat'");
	print "++++++++++++++++++++++++++++++++++++++++++++++++++++\n";
	print "Killed All Procs!!!!!\n";
	print "====================================================\n";
	sleep 3;
#}


